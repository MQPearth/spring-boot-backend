apiVersion: v1
kind: Namespace
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Namespace","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"app","app.kubernetes.io/name":"app"},"name":"app"}}
  labels:
    app.kubernetes.io/instance: app
    app.kubernetes.io/name: app
  name: app
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"name":"record-web","namespace":"app"}}
  name: record-web
  namespace: app
spec:
  replicas: 1
  serviceName: record-web
  selector:
    matchLabels:
      app: record-web
  template:
    metadata:
      name: record-web-pod
      labels:
        app: record-web
    spec:
      imagePullSecrets:
      - name: aliyun-docker
      containers:
        - name: record-web-container
          image: registry.cn-hangzhou.aliyuncs.com/thy-k8s/record-web:latest
          resources:
            limits:
              memory: "520Mi"
              cpu: "200m"
          ports:
            - containerPort: 9002
            - containerPort: 9484
          env:
            - name: JAVA_OPTS
              value: "-javaagent:/home/java/skywalking-agent/skywalking-agent.jar -Xms256m -Xmx512m"
            - name: APP_OPTS
              value: >
                -Dspring.profiles.active=prod 
                -Dspring.cloud.nacos.discovery.server-addr=nacos-headless.nacos 
                -Dspring.cloud.nacos.discovery.namespace=19a0fa32-ed2e-40f1-a1e1-aae8c81d8cf8 
                -Dskywalking.agent.service_name=record-web 
                -Dskywalking.collector.backend_service=skywalking-oap.skywalking-oap:11800
          volumeMounts:
            - name: log
              mountPath: "/data/logs/record-web/"
  volumeClaimTemplates:
  - metadata:
      name: log
      annotations:
        volume.beta.kubernetes.io/storage-class: "managed-nfs-storage"
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi    
---
apiVersion: v1
kind: Service
metadata:
  name: record-web
  namespace: app
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Service","metadata":{"name":"record-web","namespace":"app"}}
spec:
  type: NodePort
  selector:
    app: record-web
  ports:
    - name: http
      protocol: TCP
      nodePort: 30288
      port: 80
      targetPort: 9002